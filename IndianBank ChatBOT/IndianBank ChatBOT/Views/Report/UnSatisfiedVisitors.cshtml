@model UnSatisfiedVisitorsViewModel

@{
    ViewData["Title"] = "Unsatisfied Visitors";
}


<nav class="navbar navbar-expand-lg navbar-light">
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="nav nav-tabs ">
            <li class="nav-item">
                <a class="nav-link color-black" href='@Url.Action("FrequentlyAskedQueries", "Report")'>Frequently Asked Queries</a>
            </li>
            <li class="nav-item">
                <a class="nav-link color-black" href='@Url.Action("AppUsers", "Report")'>Visitors</a>
            </li>
            <li class="nav-item">
                <a class="nav-link color-black" href='@Url.Action("UnAnsweredQueries", "Report")'>UnAnswered Queries</a>
            </li>
            <li class="nav-item">
                <a class="nav-link color-black " href='@Url.Action("LeadGenerationReport", "Report")'>Lead Generation Report</a>
            </li>
            <li class="nav-item">
                <a class="nav-link color-black active" href='@Url.Action("UnSatisfiedVisitors", "Report")'>UnSatisfied Visitors</a>
            </li>
        </ul>
    </div>
</nav>

<div class="container">
    <div class="row">
        <div class='col-sm-4'>
            @*<h2 class="pt-3 pb-3">UnSatisfied Visitors</h2>*@
        </div>
        <div class='col-sm-6'>
            <div class="form-group row pt-3 pb-3">
                <label class="date_label">From: </label>
                <div id="datepicker_from" class="input-group date" data-date-format="mm-dd-yyyy">
                    <input class="form-control" type="text" readonly id="from_date_input" />
                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                </div>
                <label class="date_label">To: </label>
                <div id="datepicker_to" class="input-group date" data-date-format="mm-dd-yyyy">
                    <input class="form-control" type="text" readonly id="to_date_input" />
                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                </div>
            </div>
        </div>
        <div class='col-sm-2  pt-3 pb-3'>
            <button type="button" id="filter_btn" class="btn btn-primary">Filter</button>
        </div>

    </div>
</div>


<script type="text/javascript">
    function formatDate(date, type) {
        var current_datetime, formatted_date;
        switch (type) {
            case "mm-dd-yyyy":
                current_datetime = new Date(date);
                formatted_date = (current_datetime.getMonth() + 1) + "-" + current_datetime.getDate() + "-" + current_datetime.getFullYear();
                break;
            case "yyyy-mm-dd":
                current_datetime = new Date(date);
                formatted_date = current_datetime.getFullYear() + "-" + (current_datetime.getMonth() + 1) + "-" + current_datetime.getDate();
                break;
            default:
        }
        return formatted_date;
    }

    $(function () {
        var from_date = '@Model.From';
        var to_date = '@Model.To';

        $("#datepicker_from").datepicker({
            autoclose: true,
            todayHighlight: true
        }).datepicker('update', formatDate(from_date, "mm-dd-yyyy"));

        $("#datepicker_to").datepicker({
            autoclose: true,
            todayHighlight: true
        }).datepicker('update', formatDate(to_date, "mm-dd-yyyy"));

        $("#from_date_input").change(function () {
            from_date = formatDate(this.value, "mm-dd-yyyy");
        });

        $("#to_date_input").change(function () {
            to_date = formatDate(this.value, "mm-dd-yyyy");
        });

        $('#filter_btn').click(function () {
            var fdate = formatDate(from_date, "yyyy-mm-dd");
            var tdate = formatDate(to_date, "yyyy-mm-dd");
            window.location.href = "/Report/UnSatisfiedVisitors?from=" + fdate + "&to=" + tdate;
        });
    });
</script>

<table class="table">
    <thead>
        <tr>
            <th>
                #
            </th>
            <th>
                Query
            </th>
            <th>
                Bot Response
            </th>
            <th>
                Name
            </th>
            <th>
                Phone Number
            </th>
            <th>
                Date
            </th>
    </thead>
    <tbody>
        @{
            var index = 0;
        }
        @foreach (var item in Model.UnAnsweredQueries)
        {
            {
                index = index + 1;
                var timeStamp = item.TimeStamp.ToString("ddd, dd MMM yyy HH:mm:ss");

                <tr>
                    <td>@index</td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Query)
                    </td>
                    <td width="40%">
                        @Html.DisplayFor(modelItem => item.BotResponse)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                    </td>
                    <td>
                        @timeStamp
                    </td>
                </tr>
            }
        }
        @if (Model.UnAnsweredQueries.Count == 0)
        {
           <tr class="no-data" style="text-align:center">
                <td colspan="6">No data found !</td>
            </tr>
        }
    </tbody>
</table>