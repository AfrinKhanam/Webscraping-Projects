@model LeadGenerationReportViewModel

@{
    ViewData["Title"] = "Lead Generation Report";
}

<nav class="navbar navbar-expand-lg navbar-light  ">

    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link color-black" href='@Url.Action("FrequentlyAskedQueries", "Report")'>Frequently Asked Queries</a>
            </li>
            <li class="nav-item">
                <a class="nav-link color-black" href='@Url.Action("AppUsers", "Report")'>Visitors</a>
            </li>
            <li class="nav-item">
                <a class="nav-link color-black" href='@Url.Action("UnAnsweredQueries", "Report")'>UnAnswered Queries</a>
            </li>
            <li class="nav-item">
                <a class="nav-link color-black active" href='@Url.Action("LeadGenerationReport", "Report")'>Lead Generation Report</a>
            </li>
            <li class="nav-item">
                <a class="nav-link color-black" href='@Url.Action("UnSatisfiedVisitors", "Report")'>UnSatisfied Visitors</a>
            </li>
        </ul>
    </div>

</nav>


<div class="container">
    <div class="row">
        <div class='col-sm-4'>
            @*<h3 class="pt-3 pb-3">Lead Generation Report</h3>*@
        </div>
        <div class='col-sm-6'>
            <div class="form-group row pt-3 pb-3">
                <label class="date_label">From: </label>
                <div id="datepicker_from" class="input-group date" data-date-format="mm-dd-yyyy">
                    <input class="form-control" type="text" readonly id="from_date_input" />
                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                </div>
                <label class="date_label">To: </label>
                <div id="datepicker_to" class="input-group date" data-date-format="mm-dd-yyyy">
                    <input class="form-control" type="text" readonly id="to_date_input" />
                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                </div>
            </div>
        </div>
        <div class='col-sm-2  pt-3 pb-3'>
            <button type="button" id="filter_btn" class="btn btn-primary">Filter</button>
        </div>

    </div>
</div>


<script type="text/javascript">
    function formatDate(date, type) {
        var current_datetime, formatted_date;
        switch (type) {
            case "mm-dd-yyyy":
                current_datetime = new Date(date);
                formatted_date = (current_datetime.getMonth() + 1) + "-" + current_datetime.getDate() + "-" + current_datetime.getFullYear();
                break;
            case "yyyy-mm-dd":
                current_datetime = new Date(date);
                formatted_date = current_datetime.getFullYear() + "-" + (current_datetime.getMonth() + 1) + "-" + current_datetime.getDate();
                break;
            default:
        }
        return formatted_date;
    }

    $(function () {
        var from_date = '@Model.From';
        var to_date = '@Model.To';

        $("#datepicker_from").datepicker({
            autoclose: true,
            todayHighlight: true
        }).datepicker('update', formatDate(from_date, "mm-dd-yyyy"));

        $("#datepicker_to").datepicker({
            autoclose: true,
            todayHighlight: true
        }).datepicker('update', formatDate(to_date, "mm-dd-yyyy"));

        $("#from_date_input").change(function () {
            from_date = formatDate(this.value, "mm-dd-yyyy");
        });

        $("#to_date_input").change(function () {
            to_date = formatDate(this.value, "mm-dd-yyyy");
        });

        $('#filter_btn').click(function () {
            var fdate = formatDate(from_date, "yyyy-mm-dd");
            var tdate = formatDate(to_date, "yyyy-mm-dd");
            window.location.href = "/Report/LeadGenerationReport?from=" + fdate + "&to=" + tdate;
        });
    });
</script>

<div id="accordion">
    @{
        var headerIndex = 0;
        var headerId = "";
        var data_target = "";
        var id = "";
    }
    @foreach (var item in Model.ConversationsByIntent)
    {
        {
            var uniqueNumber = Guid.NewGuid().ToString();
            headerIndex = headerIndex + 1;
            headerId = "heading" + uniqueNumber;
            data_target = "#collapse" + uniqueNumber;
            id = "collapse" + uniqueNumber;
        }

        <div class="card">
            <div class="card-header" id="@headerId">
                <h5 class="mb-0">
                    <button class="btn btn-link report-heading" data-toggle="collapse" data-target="@data_target" aria-expanded="true" aria-controls="@id">
                        @item.Intent
                    </button>
                </h5>
            </div>

            <div id="@id" class="collapse show" aria-labelledby="@headerId" data-parent="#accordion">
                <div class="card-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    #
                                </th>
                                <th>
                                    Visitor Name
                                </th>
                                <th>
                                    Visitor Phone Number
                                </th>
                                <th>
                                    Number of queries
                                </th>
                                <th>
                                    Visited On
                                </th>
                                <th>
                                    Action
                                </th>
                            </tr>
                        </thead>

                        @{
                            int index = 0;
                            int ChatLogs = 0;
                            var groupdata_target = "";
                            var groupId = "";
                            var visitedOn = "";
                        }
                        @foreach (var user in item.ConversationByUsers)
                        {
                            {
                                var uniqueNumber = Guid.NewGuid().ToString();
                                index = index + 1;
                                visitedOn = user.TimeStamp.ToString("ddd, dd MMM yyy HH:mm:ss");
                                ChatLogs = user.TurnConversations.Count();
                                groupdata_target = "#group-of-rows-" + uniqueNumber;
                                groupId = "group-of-rows-" + uniqueNumber;
                            }
                            <tbody>
                                <tr class="clickable" data-toggle="collapse" data-target="@groupdata_target" aria-expanded="false" aria-controls="@groupId">
                                    <td>@index</td>
                                    <td>@Html.DisplayFor(modelItem => user.Name)</td>
                                    <td>@Html.DisplayFor(modelItem => user.PhoneNumber)</td>
                                    <td>@ChatLogs</td>
                                    <td>@visitedOn</td>
                                    <td>
                                        <button type="button" class="btn btn-light btn-hover">View</button>
                                        <i class="fa fa-plus " aria-hidden="true"></i>
                                    </td>
                                </tr>
                            </tbody>

                            <table id="@groupId" class="table  table-bordered collapse example-table sub-table">
                                <thead>
                                    <tr><th>S. No.</th><th>Visitor Query</th><th>Bot Response</th> </tr>
                                </thead>

                                <tbody>
                                    @{
                                        var childRowIndex = 0;
                                        var TurnConversations = new List<TurnConversation>();
                                        TurnConversations = user.TurnConversations;
                                    }

                                    @foreach (var data in TurnConversations)
                                    {
                                        {
                                            childRowIndex = childRowIndex + 1;
                                        }
                                        <tr class="table-info">
                                            <td>@childRowIndex</td>
                                            <td>@data.UserQuery</td>
                                            <td><p style="white-space: pre-line">@Html.Raw(data.BotResponse)</p></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </table>
                </div>
            </div>
        </div>
    }
</div>

@if (Model.ConversationsByIntent.Count == 0)
{

    <div id="accordion" style="text-align:center">
        No data found !
    </div>
}