@model List<StaticPage>
@{
    ViewData["Title"] = "Static Files";
}
<script src="~/lib/form-json-editor/json-edit.js"></script>
<link href="~/lib/form-json-editor/json-edit.css" rel="stylesheet" />

<h2>Static Files</h2>
<p>
    <button onclick="resetFileuploadForm();" style="float:right; margin-bottom:10px;" class="btn btn-outline-primary" data-toggle="modal" data-target="#uploadStaticFileModal">Upload File</button>
</p>

<table class="table css-serial">
    <thead>
        <tr>
            <th>
                #
            </th>
            <th>
                File
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @{
            var index = 0;
        }
        @foreach (var item in Model)
        {
            {
                index += 1;
            }
            <tr>
                <td>@index</td>
                <td>
                    @Html.DisplayFor(modelItem => item.FileName)
                </td>
                <td width="25%">
                    <button onclick="setFileDeleteId('@item.Id', '@item.EncodedPageUrl'); getPageConfigById()" class="btn btn-sm btn-outline-primary" data-toggle="modal" data-target="#setupPageConfigModel">Page Config</button>
                    <button onclick='viewStaticFile("@item.EncodedPageUrl")' class="btn btn-sm btn-outline-primary">View</button>
                    <button onclick="setFileDeleteId('@item.Id')" class="btn btn-sm btn-outline-danger" data-toggle="modal" data-target="#deleteFileModal">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" id="deleteFileModal" tabindex="-1" role="dialog" aria-labelledby="deleteFileModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteFileModalLabel">Delete Static File</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this static file.?
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">No</button>
                <input id="deleteFileId" type="hidden" value="" />
                <button type="button" class="btn btn-outline-danger" data-dismiss="modal" onclick="deleteStaticFile()">Delete</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="uploadStaticFileModal" tabindex="-1" role="dialog" aria-labelledby="uploadStaticFileModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadStaticFileModalLabel">Upload Static File</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="inputGroupFileAddon01">Upload</span>
                    </div>
                    <div class="custom-file">
                        <input type="file" class="custom-file-input" id="file" accept=".html"
                               aria-describedby="inputGroupFileAddon01">
                        <label class="custom-file-label" for="file">Choose a html file</label>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button onclick="uploadStaticFile();" class="btn btn-outline-primary" data-dismiss="modal">Upload</button>
                <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="setupPageConfigModel" tabindex="-1" role="dialog" aria-labelledby="setupPageConfigModelLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="setupPageConfigModelLabel">Page Configuration</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="jsonEditor"></div>
                @*<div class="input-group">
                        <pre id="jsonValue"></pre>
                    </div>*@
            </div>
            <div class="modal-footer">
                <input id="EncodedFilePath" type="hidden" value="" />
                <button onclick="updatePageConfig();" class="btn btn-outline-primary" data-dismiss="modal">Update</button>
                <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    function viewStaticFile(url) {
        window.open(decodeURIComponent(url), '_blank');
    }

    function resetFileuploadForm() {
        $('#file').val("");
    }

    function uploadStaticFile() {
        if ($('#file').val() == "") {
            alert('Please choose the html file to upload.!');
        } else {
            var fd = new FormData();
            var files = $('#file')[0].files[0];
            fd.append('file', files);
            $.ajax({
                url: '/StaticFiles/FileUpload',
                type: 'post',
                data: fd,
                contentType: false,
                processData: false,
                success: function (response) {
                    location.reload();
                },
                error: function (error) {
                    alert(error.responseText);
                }
            });
        }
    }

    function setFileDeleteId(fileName, encodedFilePath) {
        $('#deleteFileId').val(fileName);
        $('#EncodedFilePath').val(encodedFilePath);
    }

    function deleteStaticFile() {
        var fileId = $('#deleteFileId').val();

        var request = $.ajax({
            url: "/StaticFiles/DeleteStaticFileById?id=" + fileId,
            type: "GET"
        });

        request.done(function (response) {
            window.location.reload();
        });

        request.fail(function (jqXHR, textStatus) {
        });
    }

    function getPageConfigById() {
        resetConfiguration();
        var fileId = $('#deleteFileId').val();
        setTimeout(function () {
            var request = $.ajax({
                url: "/StaticFiles/GetPageConfigById?id=" + fileId,
                type: "GET"
            });

            request.done(function (res) {
                var staticPageInfo = res;
                var pageUrl = res.pageUrl.replace(/\\/g, "/");
                var config = {};
                if (staticPageInfo.pageConfig != "") {
                    config = JSON.parse(staticPageInfo.pageConfig)[pageUrl];
                    je.setValue(config);
                } else {
                    resetConfiguration();
                }
            });

            request.fail(function (jqXHR, textStatus) {
            });

        }, 300);
    }

    function updatePageConfig() {

        var fileId = $('#deleteFileId').val();
        var pageConfig = je.getValue();

        var urlPath = decodeURIComponent($('#EncodedFilePath').val());
        urlPath = urlPath.replace(/\\/g, "/");

        var obj = {};
        obj[urlPath] = pageConfig;
        debugger;
        var stringifiedPageConfig = JSON.stringify(obj);

        var request = $.ajax({
            url: "/StaticFiles/UpdatePageConfigById?id=" + fileId + "&pageConfig=" + stringifiedPageConfig,
            type: "GET"
        });

        request.done(function (response) {
            window.location.reload();
        });

        request.fail(function (jqXHR, textStatus) {
        });
    }

    var jsonEditorSchema = {
        "title": "json schema sample",
        "type": "object",
        "properties": {
            "page_hierarchy": {
                "type": "object",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "class": {
                        "type": "string"
                    }
                }
            },
            "subtitle_pattern": {
                "title": "subtitle_pattern",
                "type": "string"
            },
            "html": {
                "type": "object",
                "properties": {
                    "main_title": {
                        "type": "object",
                        "properties": {
                            "tag": {
                                "type": "string"
                            }, "class": {
                                "type": "string"
                            }
                        }
                    },
                    "main_content": {
                        "type": "object",
                        "properties": {
                            "tag": {
                                "type": "string"
                            }, "class": {
                                "type": "string"
                            }
                        }
                    },
                }
            }
        },
        "required": ["subtitle_pattern"]
    };

    var jsonEditorValues = {
        "subtitle_pattern": "",
        "page_hierarchy": {
            "domain": "",
            "class": ""
        }
    };

    function resetConfiguration() {
        config = {
            "subtitle_pattern": "",
            "page_hierarchy": {
                "domain": "",
                "class": ""
            }
        }
        je.setValue(config);
    }

    var je;

    $(document).ready(function () {
        je = $("#jsonEditor").jsonEdit({
            "treeExpandCollapseButton": "true",
            "schema": jsonEditorSchema,
            "value": jsonEditorValues,
            "afterValueChanged": function (newValue, newSchema) {
                $("#jsonValue").html(JSON.stringify(newValue, null, 2));
                setValidity();
            },
            "afterWidgetCreated": function (newValue, newSchema) {
                $("#jsonValue").html(JSON.stringify(newValue, null, 2));
                setValidity();
            }
        });
    });

    function setValidity() {
        if (je) $("#jsonValidity").html(JSON.stringify(je.isValid()));
    }

</script>