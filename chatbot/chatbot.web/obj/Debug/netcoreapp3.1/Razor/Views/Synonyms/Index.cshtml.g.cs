#pragma checksum "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "02e99132b8602633f50e7f11d67a5a00f2aa64cc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Synonyms_Index), @"mvc.1.0.view", @"/Views/Synonyms/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/_ViewImports.cshtml"
using IndianBank_ChatBOT;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/_ViewImports.cshtml"
using IndianBank_ChatBOT.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/_ViewImports.cshtml"
using IndianBank_ChatBOT.ViewModel;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"02e99132b8602633f50e7f11d67a5a00f2aa64cc", @"/Views/Synonyms/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1a7405cbc833fae39c0d58e8c9546f01e8fc5f2e", @"/Views/_ViewImports.cshtml")]
    public class Views_Synonyms_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<Synonym>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div class=""section-header"">
    <div class=""col-lg-4 col-md-6 col-sm-6 col-12"">
        <h1>Synonyms</h1>
    </div>
    <div class=""col-lg-4 col-md-6 col-sm-6 col-12"">

    </div>
    <div class=""col-lg-2 col-md-6 col-sm-6 col-12"">
        <button style=""float:right; margin-bottom:10px;"" class=""btn btn-outline-primary"" id=""toggle-modal-addNewSynonymModal"">Add New Word</button>
    </div>
    <div class=""col-lg-2 col-md-6 col-sm-6 col-12"">
        <button style=""float:right; margin-bottom:10px;"" class=""btn btn-outline-warning toggle-modal-resyncAllSynonyms"">Resync All Synonyms</button>
    </div>
</div>
<input id=""wordDeleteId"" type=""hidden""");
            BeginWriteAttribute("value", " value=\"", 711, "\"", 719, 0);
            EndWriteAttribute();
            WriteLiteral(" />\n<input id=\"deleteSynonymWordId\" type=\"hidden\"");
            BeginWriteAttribute("value", " value=\"", 769, "\"", 777, 0);
            EndWriteAttribute();
            WriteLiteral(@" />

<table class=""table css-serial table-bordered"">
    <thead>
        <tr>
            <th>
                #
            </th>
            <th>
                Word
            </th>
            <th>
                Synonym Words
            </th>
            <th>
                Actions
            </th>
            <th>
                Language
            </th>
        </tr>
    </thead>
    <tbody>
");
#nullable restore
#line 45 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml"
          
            var index = 0;
        

#line default
#line hidden
#nullable disable
#nullable restore
#line 48 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml"
         foreach (var item in Model)
        {
            {
                index += 1;
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("            <tr>\n                <td>");
#nullable restore
#line 54 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml"
               Write(index);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\n                <td>\n                    ");
#nullable restore
#line 56 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.Word));

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                </td>\n                <td>\n");
#nullable restore
#line 59 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml"
                     foreach (var sw in item.SynonymWords)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <ul class=\"list-group\">\n                            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                                ");
#nullable restore
#line 63 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml"
                           Write(sw.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                                <button class=\"toggle-modal-deleteSynonymWordModal close\"");
            BeginWriteAttribute("onclick", " onclick=\"", 1879, "\"", 1924, 3);
            WriteAttributeValue("", 1889, "updateDeleteSynonymWordId(\'", 1889, 27, true);
#nullable restore
#line 64 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml"
WriteAttributeValue("", 1916, sw.Id, 1916, 6, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 1922, "\')", 1922, 2, true);
            EndWriteAttribute();
            WriteLiteral(" type=\"button\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </li>\n                        </ul>\n");
#nullable restore
#line 69 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml"

                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                </td>\n                <td width=\"30%\">\n                    <button");
            BeginWriteAttribute("onclick", " onclick=\"", 2229, "\"", 2284, 5);
            WriteAttributeValue("", 2239, "updateSynonymDetails(\'", 2239, 22, true);
#nullable restore
#line 74 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml"
WriteAttributeValue("", 2261, item.Id, 2261, 8, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 2269, "\',\'", 2269, 3, true);
#nullable restore
#line 74 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml"
WriteAttributeValue("", 2272, item.Word, 2272, 10, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 2282, "\')", 2282, 2, true);
            EndWriteAttribute();
            WriteLiteral(" class=\"btn btn-sm btn-outline-primary toggle-modal-addNewSynonymWordModal\">Add New Synonym Word</button>\n                    <button");
            BeginWriteAttribute("onclick", " onclick=\"", 2418, "\"", 2455, 3);
            WriteAttributeValue("", 2428, "setWordDeleteId(\'", 2428, 17, true);
#nullable restore
#line 75 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml"
WriteAttributeValue("", 2445, item.Id, 2445, 8, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 2453, "\')", 2453, 2, true);
            EndWriteAttribute();
            WriteLiteral(" class=\"btn btn-sm btn-outline-danger toggle-modal-deleteWordModal\">Delete</button>\n                </td>\n\n                <td>\n                    ");
#nullable restore
#line 79 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.WebPageLanguage.LanguageName));

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                </td>\n            </tr>\n");
#nullable restore
#line 82 "/home/ashutosh/Desktop/WorkSpace/indian_bank_afrin_important/K-BOT/chatbot/chatbot.web/Views/Synonyms/Index.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    </tbody>
</table>

<script type=""text/javascript"">
    var synonymDetails = {};
    var wordDetails = {};
    var languages = [];

    $(document).ready(function () {
        getLanguages();
    });

    function intializePageLoadFunctions() {
        $('#toggle-modal-addNewSynonymModal').fireModal({
            title: 'Add New Word',
            body: ' <div class=""form-group"">' +
                '<label for=""exampleFormControlInput1"">Word</label>' +
                '<input type=""text"" class=""form-control"" id=""word"" placeholder=""Add new word"" autocomplete=""off"" />' +
                '<br>' +
                '<select class=""custom-select"">' +
                getLanguageDropdownOptions() +
                '</select>' +
                '</div>',
            buttons: [
                {
                    text: 'Add',
                    class: 'btn btn-outline-primary',
                    handler: addNewWord
                },
                {
                    text: 'Close',
                    class:");
            WriteLiteral(@" 'btn btn-secondary',
                    handler: function (current_modal) {
                        $.destroyModal(current_modal);
                    }
                }
            ]
        });

        $('.toggle-modal-addNewSynonymWordModal').fireModal({
            title: 'Add New Synonym Word',
            body: ' <div class=""form-group"">' +
                '<label for=""exampleFormControlInput1"">Synonym Word</label>' +
                '<input type=""text"" class=""form-control SynonymWord"" placeholder=""Add new synonym word"" autocomplete=""off"" />' +
                '</div>',
            buttons: [
                {
                    text: 'Add',
                    class: 'btn btn-outline-primary',
                    handler: addNewSynonymWord.bind(this)
                },
                {
                    text: 'Close',
                    class: 'btn btn-outline-secondary',
                    handler: function (current_modal) {
                        $.destroyModal(current_modal);
            ");
            WriteLiteral(@"        }
                }
            ]
        });

        $('.toggle-modal-deleteSynonymWordModal').fireModal({
            title: 'Delete Synonym Word',
            body: 'Are you sure you want to delete this Synonym Word?',
            buttons: [
                {
                    text: 'Delete',
                    class: 'btn btn-outline-danger',
                    handler: deleteSynonymWord
                },
                {
                    text: 'No',
                    class: 'btn btn-outline-secondary',
                    handler: function (current_modal) {
                        $.destroyModal(current_modal);
                    }
                }
            ]
        });

        $('.toggle-modal-deleteWordModal').fireModal({
            title: 'Delete Word',
            body: 'Are you sure you want to delete this Word?',
            buttons: [
                {
                    text: 'Delete',
                    class: 'btn btn-outline-danger',
                    handler: d");
            WriteLiteral(@"eleteWord
                },
                {
                    text: 'No',
                    class: 'btn btn-outline-secondary',
                    handler: function (current_modal) {
                        $.destroyModal(current_modal);
                    }
                }
            ]
        });

        var body = '<div class=""alert alert-warning"">' +
            '<b>Note! </b> Re-syncing Synonyms using this feature is recommended only if you have added/modified/deleted the Synonyms.' +
            '</br> Re-syncing of the Synonyms will be happening in the background.</div > ';

        $('.toggle-modal-resyncAllSynonyms').fireModal({
            title: 'Request for Sync Synonyms',
            body: body +
                '<div>' +
                '<select class=""custom-select"">' +
                getLanguageDropdownOptions() +
                '</select>' +
                '</div>' +
                '<br>' +
                '<b>Are you sure you want to Sync all the Synonyms?</b>',
            ");
            WriteLiteral(@"buttons: [
                {
                    text: 'Sync Synonyms',
                    class: 'btn btn-outline-warning',
                    handler: resyncSynonyms
                },
                {
                    text: 'Cancel',
                    class: 'btn btn-outline-secondary',
                    handler: function (current_modal) {
                        $.destroyModal(current_modal);
                    }
                }
            ]
        });
    }

    function getLanguages() {
        var request = $.ajax({
            url: ""/Synonyms/GetAllLanguages"",
            type: ""GET"",
            success: function (data) {
                languages = data;
                intializePageLoadFunctions();
            }
        });
    }

    function getLanguageDropdownOptions() {
        var options = ""<option selected>Select the Language</option>"";
        for (var i = 0; i < languages.length; i++) {
            options += '<option class=""lang"" value=""' + languages[i].languageId + '"">' + ");
            WriteLiteral(@"languages[i].languageName + '</option>';
        }
        return options;
    }

    function setWordDeleteId(id) {
        $('#wordDeleteId').val(id);
    }

    function updateDeleteSynonymWordId(id) {
        $('#deleteSynonymWordId').val(id);
    }

    function deleteWord() {
        var id = $('#wordDeleteId').val();

        var request = $.ajax({
            url: ""/Synonyms/DeleteWordById?id="" + id,
            type: ""DELETE""
        });

        request.done(function (response) {
            iziToast.success({
                title: 'Done!',
                position: 'topRight',
                message: 'Word deleted successfully.',
            });
            setTimeout(function () { window.location.reload(); }, 1000);
        });

        request.fail(function (jqXHR, textStatus) {
            request.fail(function (jqXHR, textStatus) {
                iziToast.error({
                    title: 'Error!',
                    position: 'topRight',
                    message: 'Failed to delete Word");
            WriteLiteral(@".',
                });
            });
        });
    }

    function deleteSynonymWord() {
        var id = $('#deleteSynonymWordId').val();

        var request = $.ajax({
            url: ""/Synonyms/DeleteSynonymWordById?id="" + id,
            type: ""DELETE""
        });

        request.done(function (response) {
            iziToast.success({
                title: 'Done!',
                position: 'topRight',
                message: 'Synonym Word deleted successfully.',
            });
            setTimeout(function () { window.location.reload(); }, 1000);
        });

        request.fail(function (jqXHR, textStatus) {
            request.fail(function (jqXHR, textStatus) {
                iziToast.error({
                    title: 'Error!',
                    position: 'topRight',
                    message: 'Failed to delete Synonym Word.',
                });
            });
        });
    }

    function updateSynonymDetails(id, word) {
        synonymDetails.id = id;
        synonymDetails");
            WriteLiteral(@".word = word;
        $('#addNewSynonymWordModalLabel').text('Add New Synonym Word for - ' + word);
    }

    function addNewWord(e) {
        var word = document.getElementById('word').value.trim();
        var lang = $(""#"" + e[0].id + "" .custom-select"").val().trim();

        if (word.trim().length == 0) {
            alert('Please enter the Word.');
            return;
        }

        if (lang.trim().length == 0 || lang == ""Select the Language"") {
            alert('Please select the Language');
            return;
        }


        var langId = parseInt(lang);
        var request = $.ajax({
            url: ""/Synonyms/AddNewWord"",
            data: { Id: 0, Word: word, LanguageId: langId,  },
            type: ""POST""
        });

        request.done(function (response) {
            iziToast.success({
                title: 'Done!',
                position: 'topRight',
                message: 'New Word added successfully.',
            });
            setTimeout(function () { window.location.relo");
            WriteLiteral(@"ad(); }, 1000);
        });

        request.fail(function (jqXHR, textStatus) {
            iziToast.error({
                title: 'Error!',
                position: 'topRight',
                message: 'Failed to add new Word.',
            });
        });
    }

    function addNewSynonymWord(e) {
        var word = $(""#"" + e[0].id + "" .SynonymWord"").val().trim();
        var synonymWord = { Id: 0, name: word, SynonymId: synonymDetails.id };
        if (word.trim().length == 0) {
            alert('Please enter the Synonym Word.');
            return;
        }

        var request = $.ajax({
            url: ""/Synonyms/AddNewSynonymWord"",
            data: synonymWord,
            type: ""POST""
        });

        request.done(function (response) {
            iziToast.success({
                title: 'Done!',
                position: 'topRight',
                message: 'New Synonym Word added successfully.',
            });
            setTimeout(function () { window.location.reload(); }, 500);
     ");
            WriteLiteral(@"   });

        request.fail(function (jqXHR, textStatus) {
            iziToast.error({
                title: 'Error!',
                position: 'topRight',
                message: 'Failed to add new Synonym Word.',
            });
        });
    }

    function resyncSynonyms(current_modal) {

        var lang = $(""#"" + current_modal[0].id + "" .custom-select"").val().trim();
        if (lang.trim().length == 0 || lang == ""Select the Language"") {
            alert('Please select the Language to Sync!');
            return;
        }

        $.destroyModal(current_modal);

        var langId = parseInt(lang);
        var request = $.ajax({
            url: ""/Synonyms/ReSyncSynonyms?LanguageId="" + langId,
            type: ""POST""
        });

        request.done(function (response) {
            iziToast.success({
                title: 'Done!',
                position: 'topRight',
                message: 'Synonyms re-synched successfully.',
            });
        });

        request.fail(function (jq");
            WriteLiteral(@"XHR, textStatus) {
            request.fail(function (jqXHR, textStatus) {
                iziToast.error({
                    title: 'Error!',
                    position: 'topRight',
                    message: jqXHR.responseText,
                });
            });
        });
    }
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<Synonym>> Html { get; private set; }
    }
}
#pragma warning restore 1591
